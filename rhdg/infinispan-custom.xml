<infinispan
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="urn:infinispan:config:14.0 https://infinispan.org/schemas/infinispan-config-14.0.xsd
                       urn:infinispan:server:14.0 https://infinispan.org/schemas/infinispan-server-14.0.xsd"
   xmlns="urn:infinispan:config:14.0"
   xmlns:server="urn:infinispan:server:14.0">

   <cache-container name="default" statistics="true">
      <transport cluster="${infinispan.cluster.name:cluster}"
         stack="${infinispan.cluster.stack:tcp}" node-name="${infinispan.node.name:}" />
      <security>
         <authorization />
      </security>
   </cache-container>

   <server xmlns="urn:infinispan:server:14.0">
      <interfaces>
         <interface name="public">
            <inet-address value="${infinispan.bind.address:127.0.0.1}" />
         </interface>
      </interfaces>

      <socket-bindings default-interface="public"
         port-offset="${infinispan.socket.binding.port-offset:0}">
         <socket-binding name="default" port="${infinispan.bind.port:11222}" />
         <socket-binding name="memcached" port="11221" />
      </socket-bindings>

      <security>
         <credential-stores>
            <credential-store name="credentials" path="credentials.pfx">
               <clear-text-credential clear-text="secret" />
            </credential-store>
         </credential-stores>
         <security-realms>
            <security-realm name="default">
               <!-- Uncomment to enable TLS on the realm -->
               <!-- server-identities>
                  <ssl>
                     <keystore path="application.keystore"
                               password="password" alias="server"
                               generate-self-signed-certificate-host="localhost"/>
                  </ssl>
               </server-identities-->
               <properties-realm groups-attribute="Roles">
                  <user-properties path="users.properties" />
                  <group-properties path="groups.properties" />
               </properties-realm>
            </security-realm>

            <security-realm name="ldap-realm">
               <!-- Specifies connection properties. -->
               <ldap-realm url="ldap://openldap:1389"
                           principal="cn=admin,dc=acme,dc=org"
                           credential="adminpassword"
                           direct-verification="true">
                 <!-- Defines how principals are mapped to LDAP entries. -->
                 <identity-mapping rdn-identifier="uid" search-dn="ou=clients,dc=acme,dc=org">

                            <user-password-mapper from="userPassword" verifiable="false" />

                            <!-- Retrieves all the groups of which the user is a member. -->
                            <attribute-mapping>
                                <attribute from="cn" to="Roles"
                                    filter="(&amp;(objectClass=groupOfNames)(member={1}))"
                                    filter-dn="ou=roles,dc=acme,dc=org" />
                            </attribute-mapping>
                        </identity-mapping>
               </ldap-realm>
             </security-realm>


         </security-realms>
      </security>

      <!-- <endpoints socket-binding="default" security-realm="default" /> -->


      <endpoints>
         <endpoint socket-binding="default" security-realm="ldap-realm">
             <hotrod-connector>
                 <authentication>
                     <sasl qop="auth" server-name="infinispan" mechanisms="BASIC DIGEST PLAIN" />
                 </authentication>
             </hotrod-connector>
             <!-- <rest-connector /> -->
             <rest-connector>
               <authentication mechanisms="DIGEST BASIC"/>
             </rest-connector>
         </endpoint>
     </endpoints>
   </server>
</infinispan>